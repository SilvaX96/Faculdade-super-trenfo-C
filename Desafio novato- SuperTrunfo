#include <stdio.h>
#include <string.h>

// Definição da struct
typedef struct {
    char Estado[50];
    char codigoCarta[50];
    char nomeCidade[100];
    unsigned long int populacao; // NOVO ATRIBUTO ATUALIZADO
    float area;
    float pib;
    int NumeroPontosTuristicos;
    float densidadePopulacional;
    float pibPerCapita;
    float superPoder; // NOVO ATRIBUTO ATUALIZADO
} Carta;

// Função para preencher os dados de uma carta
void preencherCarta(Carta *carta, int numero) {
    printf("\n--- Preenchendo Carta %d ---\n", numero);

    printf("Digite o Estado: \n");
    scanf("%s", carta->Estado);

    printf("Digite o codigo da Carta: \n");
    scanf("%s", carta->codigoCarta);

    printf("Digite o nome da cidade: \n");
    scanf(" %[^\n]", carta->nomeCidade); // escrevi essa linha dessa forma pois o codigo estava apresentando erro, e nao estava dando espacos necessarios, apos pesquisar encontrei a entrada "%[^\n]" permite ler nomes com espaços, e resolve o erro no meu codigo!!

    printf("Digite a Populacao: \n");
    scanf("%lu", &carta->populacao);

    printf("Digite a Area (em km²): \n");
    scanf("%f", &carta->area);

    printf("Digite o PIB (em milhões): \n");
    scanf("%f", &carta->pib);

    printf("Digite o numero de pontos turisticos: \n");
    scanf("%d", &carta->NumeroPontosTuristicos);

    // Cálculos
    carta->densidadePopulacional = carta->populacao / carta->area;
    carta->pibPerCapita = carta->pib / carta->populacao;

    float inversoDensidade = 0.0;
    if (carta->densidadePopulacional > 0) {
        inversoDensidade = 1.0 / carta->densidadePopulacional;
    }

    carta->superPoder = carta->populacao
                      + carta->area
                      + carta->pib
                      + carta->NumeroPontosTuristicos
                      + carta->pibPerCapita
                      + inversoDensidade;
}

// Função para exibir os dados de uma carta
void exibirCarta(Carta carta, int numero) {
    printf("\n--- Dados da Carta %d ---\n", numero);
    printf("Estado: %s - Codigo da carta: %s\n", carta.Estado, carta.codigoCarta);
    printf("Cidade: %s\n", carta.nomeCidade);
    printf("Populacao: %lu\n", carta.populacao);
    printf("Area: %.2f km²\n", carta.area);
    printf("PIB: %.2f milhões\n", carta.pib);
    printf("Pontos Turísticos: %d\n", carta.NumeroPontosTuristicos);
    printf("Densidade Populacional: %.2f hab/km²\n", carta.densidadePopulacional);
    printf("PIB per capita: %.2f\n", carta.pibPerCapita);
    printf("Super Poder: %.2f ⚡️\n", carta.superPoder);

    if (carta.densidadePopulacional > 1000) {
        printf("Atenção: Alta densidade populacional!\n");
    }
}

// Função de comparação entre duas cartas
void compararCartas(Carta c1, Carta c2) {
    int pontos1 = 0;
    int pontos2 = 0;

    printf("\n========================\n");
    printf("COMPARAÇÃO ENTRE AS CARTAS\n");

    if (c1.populacao > c2.populacao) {
        printf("População: Carta 1 vence!\n");
        pontos1++;
    } 
    if (c2.populacao > c1.populacao) {
        printf("População: Carta 2 vence!\n");
        pontos2++;
    }
    if (c1.populacao == c2.populacao) {
        printf("População: Empate!\n");
    }

    if (c1.area > c2.area) {
        printf("Área: Carta 1 vence!\n");
        pontos1++;
    }
    if (c2.area > c1.area) {
        printf("Área: Carta 2 vence!\n");
        pontos2++;
    }
    if (c1.area == c2.area) {
        printf("Área: Empate!\n");
    }

    if (c1.pib > c2.pib) {
        printf("PIB: Carta 1 vence!\n");
        pontos1++;
    }
    if (c2.pib > c1.pib) {
        printf("PIB: Carta 2 vence!\n");
        pontos2++;
    }
    if (c1.pib == c2.pib) {
        printf("PIB: Empate!\n");
    }

    if (c1.NumeroPontosTuristicos > c2.NumeroPontosTuristicos) {
        printf("Pontos Turísticos: Carta 1 vence!\n");
        pontos1++;
    }
    if (c2.NumeroPontosTuristicos > c1.NumeroPontosTuristicos) {
        printf("Pontos Turísticos: Carta 2 vence!\n");
        pontos2++;
    }
    if (c1.NumeroPontosTuristicos == c2.NumeroPontosTuristicos) {
        printf("Pontos Turísticos: Empate!\n");
    }

    if (c1.pibPerCapita > c2.pibPerCapita) {
        printf("PIB per capita: Carta 1 vence!\n");
        pontos1++;
    }
    if (c2.pibPerCapita > c1.pibPerCapita) {
        printf("PIB per capita: Carta 2 vence!\n");
        pontos2++;
    }
    if (c1.pibPerCapita == c2.pibPerCapita) {
        printf("PIB per capita: Empate!\n");
    }

    if (c1.densidadePopulacional < c2.densidadePopulacional) {
        printf("Densidade Populacional: Carta 1 vence (MENOR é melhor)!\n");
        pontos1++;
    }
    if (c2.densidadePopulacional < c1.densidadePopulacional) {
        printf("Densidade Populacional: Carta 2 vence (MENOR é melhor)!\n");
        pontos2++;
    }
    if (c1.densidadePopulacional == c2.densidadePopulacional) {
        printf("Densidade Populacional: Empate!\n");
    }

    if (c1.superPoder > c2.superPoder) {
        printf("Super Poder: Carta 1 vence!\n");
        pontos1++;
    }
    if (c2.superPoder > c1.superPoder) {
        printf("Super Poder: Carta 2 vence!\n");
        pontos2++;
    }
    if (c1.superPoder == c2.superPoder) {
        printf("Super Poder: Empate!\n");
    }

    printf("\nResultado final:\n");
    printf("Carta 1: %d ponto(s)\n", pontos1);
    printf("Carta 2: %d ponto(s)\n", pontos2);

    if (pontos1 > pontos2) {
        printf(" Carta 1 é a campeã!\n");
    }
    if (pontos2 > pontos1) {
        printf(" Carta 2 é a campeã!\n");
    }
    if (pontos1 == pontos2) {
        printf(" Empate geral!\n");
    }
}

// Função principal
int main() {
    Carta carta1, carta2;

    preencherCarta(&carta1, 1);
    preencherCarta(&carta2, 2);

    exibirCarta(carta1, 1);
    exibirCarta(carta2, 2);

    compararCartas(carta1, carta2);

    return 0;
}

